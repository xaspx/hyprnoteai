{
  "$defs": {
    "AnthropicSettings": {
      "additionalProperties": true,
      "description": "Settings for using Anthropic models in the MCP Agent application.",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        }
      },
      "title": "AnthropicSettings",
      "type": "object"
    },
    "CohereSettings": {
      "additionalProperties": true,
      "description": "Settings for using Cohere models in the MCP Agent application.",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        }
      },
      "title": "CohereSettings",
      "type": "object"
    },
    "LoggerSettings": {
      "description": "Logger settings for the MCP Agent application.",
      "properties": {
        "type": {
          "default": "console",
          "enum": [
            "none",
            "console",
            "file",
            "http"
          ],
          "title": "Type",
          "type": "string"
        },
        "level": {
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warning",
            "error"
          ],
          "title": "Level",
          "type": "string",
          "description": "Minimum logging level"
        },
        "path": {
          "default": "mcp-agent.log",
          "title": "Path",
          "type": "string",
          "description": "Path to log file, if logger 'type' is 'file'."
        },
        "batch_size": {
          "default": 100,
          "title": "Batch Size",
          "type": "integer",
          "description": "Number of events to accumulate before processing"
        },
        "flush_interval": {
          "default": 2.0,
          "title": "Flush Interval",
          "type": "number",
          "description": "How often to flush events in seconds"
        },
        "max_queue_size": {
          "default": 2048,
          "title": "Max Queue Size",
          "type": "integer",
          "description": "Maximum queue size for event processing"
        },
        "http_endpoint": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Http Endpoint",
          "description": "HTTP endpoint for event transport"
        },
        "http_headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Http Headers",
          "description": "HTTP headers for event transport"
        },
        "http_timeout": {
          "default": 5.0,
          "title": "Http Timeout",
          "type": "number",
          "description": "HTTP timeout seconds for event transport"
        }
      },
      "title": "LoggerSettings",
      "type": "object"
    },
    "MCPServerAuthSettings": {
      "additionalProperties": true,
      "description": "Represents authentication configuration for a server.",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        }
      },
      "title": "MCPServerAuthSettings",
      "type": "object"
    },
    "MCPServerSettings": {
      "description": "Represents the configuration for an individual server.",
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name",
          "description": "The name of the server."
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description",
          "description": "The description of the server."
        },
        "transport": {
          "default": "stdio",
          "enum": [
            "stdio",
            "sse"
          ],
          "title": "Transport",
          "type": "string",
          "description": "The transport mechanism."
        },
        "command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Command",
          "description": "The command to execute the server (e.g. npx)."
        },
        "args": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Args",
          "description": "The arguments for the server command."
        },
        "read_timeout_seconds": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Read Timeout Seconds",
          "description": "The timeout in seconds for the server connection."
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Url",
          "description": "The URL for the server (e.g. for SSE transport)."
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/MCPServerAuthSettings"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The authentication configuration for the server."
        }
      },
      "title": "MCPServerSettings",
      "type": "object"
    },
    "MCPSettings": {
      "additionalProperties": true,
      "description": "Configuration for all MCP servers.",
      "properties": {
        "servers": {
          "additionalProperties": {
            "$ref": "#/$defs/MCPServerSettings"
          },
          "default": {},
          "title": "Servers",
          "type": "object"
        }
      },
      "title": "MCPSettings",
      "type": "object"
    },
    "OpenAISettings": {
      "additionalProperties": true,
      "description": "Settings for using OpenAI models in the MCP Agent application.",
      "properties": {
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        }
      },
      "title": "OpenAISettings",
      "type": "object"
    },
    "OpenTelemetrySettings": {
      "description": "OTEL settings for the MCP Agent application.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "service_name": {
          "default": "mcp-agent",
          "title": "Service Name",
          "type": "string"
        },
        "service_instance_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Service Instance Id"
        },
        "service_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Service Version"
        },
        "otlp_endpoint": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Otlp Endpoint",
          "description": "OTLP endpoint for OpenTelemetry tracing"
        },
        "console_debug": {
          "default": false,
          "title": "Console Debug",
          "type": "boolean",
          "description": "Log spans to console"
        },
        "sample_rate": {
          "default": 1.0,
          "title": "Sample Rate",
          "type": "number",
          "description": "Sample rate for tracing (1.0 = sample everything)"
        }
      },
      "title": "OpenTelemetrySettings",
      "type": "object"
    },
    "TemporalSettings": {
      "description": "Temporal settings for the MCP Agent application.",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "namespace": {
          "default": "default",
          "title": "Namespace",
          "type": "string"
        },
        "task_queue": {
          "title": "Task Queue",
          "type": "string"
        },
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Api Key"
        }
      },
      "required": [
        "host",
        "task_queue"
      ],
      "title": "TemporalSettings",
      "type": "object"
    },
    "UsageTelemetrySettings": {
      "description": "Settings for usage telemetry in the MCP Agent application.\nAnonymized usage metrics are sent to a telemetry server to help improve the product.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean",
          "description": "Enable usage telemetry in the MCP Agent application."
        },
        "enable_detailed_telemetry": {
          "default": false,
          "title": "Enable Detailed Telemetry",
          "type": "boolean",
          "description": "If enabled, detailed telemetry data, including prompts and agents, will be sent to the telemetry server."
        }
      },
      "title": "UsageTelemetrySettings",
      "type": "object"
    }
  },
  "additionalProperties": true,
  "description": "Configuration schema for MCP Agent applications",
  "properties": {
    "mcp": {
      "anyOf": [
        {
          "$ref": "#/$defs/MCPSettings"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "servers": {}
      },
      "description": "MCP config, such as MCP servers"
    },
    "execution_engine": {
      "default": "asyncio",
      "enum": [
        "asyncio",
        "temporal"
      ],
      "title": "Execution Engine",
      "type": "string",
      "description": "Execution engine for the MCP Agent application"
    },
    "temporal": {
      "anyOf": [
        {
          "$ref": "#/$defs/TemporalSettings"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Settings for Temporal workflow orchestration"
    },
    "anthropic": {
      "anyOf": [
        {
          "$ref": "#/$defs/AnthropicSettings"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Settings for using Anthropic models in the MCP Agent application"
    },
    "cohere": {
      "anyOf": [
        {
          "$ref": "#/$defs/CohereSettings"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Settings for using Cohere models in the MCP Agent application"
    },
    "openai": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenAISettings"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Settings for using OpenAI models in the MCP Agent application"
    },
    "otel": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenTelemetrySettings"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "enabled": true,
        "service_name": "mcp-agent",
        "service_instance_id": null,
        "service_version": null,
        "otlp_endpoint": null,
        "console_debug": false,
        "sample_rate": 1.0
      },
      "description": "OpenTelemetry logging settings for the MCP Agent application"
    },
    "logger": {
      "anyOf": [
        {
          "$ref": "#/$defs/LoggerSettings"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "type": "console",
        "level": "info",
        "path": "mcp-agent.log",
        "batch_size": 100,
        "flush_interval": 2.0,
        "max_queue_size": 2048,
        "http_endpoint": null,
        "http_headers": null,
        "http_timeout": 5.0
      },
      "description": "Logger settings for the MCP Agent application"
    },
    "usage_telemetry": {
      "anyOf": [
        {
          "$ref": "#/$defs/UsageTelemetrySettings"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "enabled": true,
        "enable_detailed_telemetry": false
      },
      "description": "Usage tracking settings for the MCP Agent application"
    }
  },
  "title": "MCP Agent Configuration Schema",
  "type": "object",
  "$schema": "http://json-schema.org/draft-07/schema#"
}