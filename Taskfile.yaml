version: "3"
dotenv: [".env.local"]
tasks:
  app:env:
    cmds:
      - |
          secrets=$(grep -v '^#' .env.prod | grep '=' | sed 's/"/\\"/g' | tr '\n' ' ')
          fly secrets set $secrets -a hypr-server

  py:init: POETRY_VIRTUALENVS_IN_PROJECT=true poetry install --no-cache --no-interaction --all-extras
  py:run: poetry run python3 {{.CLI_ARGS}}

  stripe: stripe listen --skip-verify --forward-to http://localhost:5000/webhook/stripe
  bacon: bacon {{.CLI_ARGS}}

  bump:
    cmds:
      - |
          CURRENT_VERSION=$(grep -o '"version": "[0-9]\+\.[0-9]\+\.[0-9]\+"' apps/desktop/src-tauri/tauri.conf.json | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')

          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"

          echo "Updating version from $CURRENT_VERSION to $NEW_VERSION"

          perl -i -pe "s/^version = \"[0-9]+\.[0-9]+\.[0-9]+\"/version = \"$NEW_VERSION\"/ if \$. < 10" apps/desktop/src-tauri/Cargo.toml
          perl -i -pe "s/^  \"version\": \"[0-9]+\.[0-9]+\.[0-9]+\"/  \"version\": \"$NEW_VERSION\"/ if \$. < 10" apps/desktop/src-tauri/tauri.conf.json

  i18n:
    cmds:
      - |
          pnpm -F desktop lingui:extract |
          awk -F 'â”‚' '($2 ~ /[^ ]/ && $3 ~ /[0-9-]/) {
            gsub(/^ *| *$/, "", $2);
            gsub(/[^0-9-]/, "", $3);
            gsub(/^ *| *$/, "", $4);
            printf "{\"language\":\"%s\",\"total\":%d,\"missing\":%d}\n",
              $2,
              ($3 == "-" ? 0: $3),
              ($4 == "-" ? 0: $4)
          }' |
          jq -s . > ./apps/docs/data/i18n.json

  bindgen:
    cmds:
      - |
          cargo metadata --format-version=1 --no-deps \
            | jq -r '.packages[].name' \
            | grep '^tauri-plugin-' \
            | xargs -n1 cargo test export_types --package
